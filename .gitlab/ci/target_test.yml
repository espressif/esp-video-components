variables:
  # There is no target-test-env-v4.4
  DOCKER_TARGET_TEST_v5_0_ENV_IMAGE: "$CI_DOCKER_REGISTRY/target-test-env-v5.0:3"
  DOCKER_TARGET_TEST_v5_1_ENV_IMAGE: "$CI_DOCKER_REGISTRY/target-test-env-v5.1:1"
  DOCKER_TARGET_TEST_v5_2_ENV_IMAGE: "$CI_DOCKER_REGISTRY/target-test-env-v5.2:1"
  DOCKER_TARGET_TEST_v5_3_ENV_IMAGE: "$CI_DOCKER_REGISTRY/target-test-env-v5.3:1"

.test_template: &test_template
  image: DOCKER_TARGET_TEST_v5_3_ENV_IMAGE
  stage: target_test
  timeout: 4 hour
  variables:
    GIT_DEPTH: 1
    SUBMODULES_TO_FETCH: "none"
  cache:
    # Usually do not need submodule-cache in target_test
    - key: pip-cache
      paths:
        - .cache/pip
      policy: pull

.pytest_template:
  <<: *test_template
  artifacts:
    when: always
    paths:
      - XUNIT_RESULT.xml
      - pytest_embedded_log/
    reports:
      junit: XUNIT_RESULT.xml
    expire_in: 4 days
  variables:
    TEST_TARGET: 'esp32'
    TEST_FOLDER: '.'
    TEST_ENV: 'generic'
  script:
    - pip install -r tools/requirements/requirement.pytest.txt
    - pytest ${TEST_FOLDER} --target ${TEST_TARGET} --env ${TEST_ENV} --junitxml=XUNIT_RESULT.xml

test_apps_posix_test:
  extends:
    - .pytest_template
    - .rules:build:test_apps
  needs:
    - job: "build_test_apps_posix_test_esp32s3"
      artifacts: true
      optional: true
  retry:
    max: 2
  parallel:
    matrix:
      - IDF_TARGET: esp32s3
        IDF_VERSION: "5.3"
        ENV_TAG: quad_psram
  tags:
    - ${IDF_TARGET}
    - ${ENV_TAG}
  image: $DOCKER_TARGET_TEST_v5_3_ENV_IMAGE
  variables:
    TEST_TARGET: ${IDF_TARGET}
    TEST_FOLDER: ./test_apps/posix_test
    TEST_ENV: ${ENV_TAG}

test_apps_pipeline_test_sim_device_test:
  extends:
    - .pytest_template
    - .rules:build:test_apps
  when: manual
  allow_failure: true
  needs:
    - job: "build_test_apps_pipeline_test_sim_device_test_esp32s3"
      artifacts: true
      optional: true
  retry:
    max: 2
  parallel:
    matrix:
      - IDF_TARGET: esp32s3
        IDF_VERSION: "5.3"
        ENV_TAG: quad_psram
  tags:
    - ${IDF_TARGET}
    - ${ENV_TAG}
  image: $DOCKER_TARGET_TEST_v5_3_ENV_IMAGE
  variables:
    TEST_TARGET: ${IDF_TARGET}
    TEST_FOLDER: ./test_apps/pipeline_test
    TEST_ENV: ${ENV_TAG}